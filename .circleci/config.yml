version: 2.1

jobs:
  deploy_api:
    docker:
      - image: cimg/base:stable
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install apictl
          command: |
            echo "Downloading apictl Linux binary..."
            curl -L -o apictl.tar.gz "https://github.com/wso2/product-apim-tooling/releases/download/v4.4.1/apictl-4.4.1-linux-i586.tar.gz"
            # Create a temporary directory for extraction
            mkdir -p /tmp/apictl
            tar -xzvf apictl.tar.gz -C /tmp/apictl
            # List extracted files for debugging
            ls -la /tmp/apictl
            # Adjusted path to find the apictl binary
            if [ -f "/tmp/apictl/apictl/apictl" ]; then
              echo "Found apictl binary in /tmp/apictl/apictl."
              mv /tmp/apictl/apictl/apictl ~/apictl
            else
              echo "apictl binary not found!"
              exit 1
            fi
            chmod +x ~/apictl
            # Add the directory containing the binary to the PATH
            echo "export PATH=~/apictl:$PATH" >> ~/.bashrc
            export PATH=~/apictl:$PATH
            echo "Installed apictl version:"
            ~/apictl version
            # Set timeout for apictl commands
            export APICTL_TIMEOUT=120

      - run:
          name: Check Network Connectivity
          command: |
            ping -c 4 520e-203-94-95-14.ngrok-free.app

      - run:
          name: Check APIM URL
          command: |
            curl -I https://localhost:9443/publisher -k

      - run:
          name: List Directory Contents
          command: |
            ls -la

      - run:
          name: Configure APIM Environment
          command: |
            ~/apictl remove env dev || true
            export APICLIENT_TIMEOUT=120
            ~/apictl add env dev --apim https://localhost:9443

      - run:
          name: Login to APIM
          command: |
            echo "Logging in to APIM..."
            ~/apictl version
            echo "admin" | ~/apictl login dev --insecure -u admin --password-stdin -k

      - run:
          name: Import API Project
          command: |
            ~/apictl import api --file ./SampleAPI --environment dev -k --rotate-revision

workflows:
  version: 2
  deploy:
    jobs:
      - deploy_api
