version: 2.1

jobs:
  runner-test:
    machine: true
    resource_class: shashika/demo1
    steps:
      - run:
          name: Greeting
          command: echo "Hi I'm on Runners !"

      # Step 1: Check out the repository code.
      - checkout

      # Step 2: Lint your OpenAPI spec with Spectral standalone
      - run:
          name: Lint API Spec with Spectral
          command: |
            echo "🔍 Downloading Spectral standalone binary and linting API spec…"
            # Detect OS (linux|darwin) and ARCH (x64|arm64)
            OS=$(uname | tr '[:upper:]' '[:lower:]')
            ARCH=$(uname -m | sed 's/^x86_64$/x64/; s/^arm64$/arm64/')
            VERSION="6.10.0"
            ASSET="spectral-${OS}-${ARCH}.tar.gz"
            URL="https://github.com/stoplightio/spectral/releases/download/v${VERSION}/${ASSET}"
            echo "Fetching $URL"
            curl -L -o spectral.tar.gz "$URL"

            # Extract and move the binary
            mkdir -p /tmp/spectral
            tar -xzvf spectral.tar.gz -C /tmp/spectral
            mv /tmp/spectral/spectral ./spectral
            chmod +x ./spectral

            # Run Spectral using your .spectral.yml ruleset
            ./spectral lint ./SampleAPI/api.yaml \
              --ruleset .spectral.yml \
              --fail-severity error

      # Step 3: Install apictl (Linux version)
      - run:
          name: Install apictl
          command: |
            echo "Downloading apictl Linux binary..."
            curl -L -o apictl.tar.gz \
              "https://github.com/wso2/product-apim-tooling/releases/download/v4.4.1/apictl-4.4.1-darwin-arm64.tar.gz"
            mkdir -p /tmp/apictl
            tar -xzvf apictl.tar.gz -C /tmp/apictl
            ls -la /tmp/apictl
            if [ -f "/tmp/apictl/apictl/apictl" ]; then
              mv /tmp/apictl/apictl/apictl ~/apictl
            elif [ -f "/tmp/apictl/some-folder/apictl" ]; then
              mv /tmp/apictl/some-folder/apictl ~/apictl
            else
              echo "apictl binary not found!" && exit 1
            fi
            chmod +x ~/apictl
            echo "export PATH=~/apictl:\$PATH" >> ~/.bashrc
            export PATH=~/apictl:$PATH
            echo "Installed apictl version:" && ~/apictl version
            export APICTL_TIMEOUT=120

      # Step 4: Check APIM URL (local test)
      - run:
          name: Check APIM URL
          command: |
            curl -I https://localhost:9443/publisher -k

      # Step 5: List contents of the current directory
      - run:
          name: List Directory Contents
          command: |
            ls -la

      # Step 6: Configure the APIM environment
      - run:
          name: Configure APIM Environment
          command: |
            ~/apictl remove env dev || true
            export APICLIENT_TIMEOUT=120
            ~/apictl add env dev --apim https://localhost:9443

      # Step 7: Login to APIM
      - run:
          name: Login to APIM
          command: |
            echo "Logging in to APIM..."
            ~/apictl version
            echo "admin" | ~/apictl login dev --insecure -u admin --password-stdin -k

      # Step 8: Import the API project into APIM.
      - run:
          name: Import API Project
          command: |
            ~/apictl import api --file ./SampleAPI --environment dev -k --rotate-revision

workflows:
  version: 2
  testing:
    jobs:
      - runner-test
